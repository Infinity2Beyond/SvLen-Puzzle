/* Biến CSS tùy chỉnh (giữ nguyên hoặc cập nhật nếu cần) */
:root {
  --text-color: #0e0d0d; /* Đổi màu text mặc định nếu cần cho nền mới */
  --input-bg-color: #fff;
  --input-text-color: #121111;
  --button-bg-color: #7f8ff4;
  --button-text-color: #fff;
  --button-bg-hover-color: #7181f3;

  --n: 8;
  --grid-size: 400px; /* Kích thước của lưới puzzle */
  --piece-size: calc(var(--grid-size) / var(--n));
  --bg-image: url('./image/SVLEN.jpg');
  --gap: 0px; /* Không có khoảng cách giữa các mảnh */

  /* Các biến không còn dùng trực tiếp hoặc đã tích hợp */
  /* --pieces-area-height: 300px; */
}

/* Reset cơ bản */
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  /* --- MÀU NỀN TƯƠI SÁNG --- */
  /* Chọn một trong các tùy chọn sau hoặc tự tạo */

  /* Tùy chọn 1: Gradient nhẹ nhàng */
   background: linear-gradient(135deg, #a8e6cf 0%, #dcedc1 100%); */

  /* Tùy chọn 2: Màu xanh da trời nhạt */
  /*background-color: #e0f7fa;

  /* Tùy chọn 3: Màu vàng kem */
  /* background-color: #fffde7; */

  font: 1rem "PT Sans", sans-serif;
  color: var(--text-color); /* Đảm bảo màu text tương phản tốt */
}


/* Các style cũ giữ nguyên */
a { color: inherit; text-decoration: none; transition: color 0.2s ease-in; }
a:hover { color: var(--button-bg-color); }

.game-instructions {
  text-align: center;
  width: 100%; /* Đảm bảo thẻ p chiếm đủ rộng để căn giữa hiệu quả */
  max-width: 500px; /* Giới hạn chiều rộng tối đa nếu muốn */
  margin-left: auto; /* Căn giữa block element nếu cần */
  margin-right: auto;
  margin-bottom: 5px; /* Giữ khoảng cách dưới */
  line-height: 1.5; /* Tăng khoảng cách dòng nếu muốn */
  color: var(--text-color); /* Kế thừa hoặc đặt màu cụ thể */
}
/* Container chính */
.container {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 20px 15px; /* Giảm padding trên dưới một chút */
  width: 100%;
}

/* Form và Input */
.form { margin-bottom: 5px; }
.form__field {
  text-align: center;
  width: 100%;
  max-width: 360px;
  background: var(--input-bg-color);
  color: var(--input-text-color);
  font: inherit;
  box-shadow: 0 6px 10px 0 rgba(0, 0, 0 , .1);
  border: 0;
  outline: 0;
  padding: 20px 15px;
  border-radius: 15px;
}

/* --- VÙNG CHỨA TRÒ CHƠI CHÍNH --- */
.game-area {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start; /* Căn đỉnh */
  gap: 20px; /* Khoảng cách giữa vùng mảnh và lưới */
  width: 100%;
  max-width: 1000px; /* Giới hạn chiều rộng tối đa */
  margin-top: 20px;
}

/* --- LƯỚI PUZZLE --- */
.puzzle-grid {
  display: grid;
  grid-template-columns: repeat(var(--n), var(--piece-size));
  grid-template-rows: repeat(var(--n), var(--piece-size));
  gap: var(--gap);
  width: var(--grid-size);
  height: var(--grid-size);

  /* --- THAY ĐỔI KHUNG ẢNH Ở ĐÂY --- */
  border: 1px solid #ccc; /* Giữ lại 1 border mỏng cho chính lưới nếu muốn */
  position: relative; /* Bắt buộc cho ::before */
  z-index: 1; /* Đảm bảo lưới và mảnh ghép nổi lên trên ::before */
  background-color: #e0e0e0;
  flex-shrink: 0;
  /* Thêm bóng đổ cho toàn bộ (lưới + khung) */
  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3);
  /* -------------------------------------- */
}

/* Tạo lớp khung giả bằng ::before */
.puzzle-grid::before {
  content: '';
  position: absolute;
  /* Đặt vị trí và kích thước để bao quanh grid */
  /* Giá trị âm bằng độ dày mong muốn của khung */
  top: -15px;
  left: -15px;
  right: -15px;
  bottom: -15px;

  /* Style cho khung giả */
  border: 15px solid #A0522D; /* Màu Sienna */
  border-radius: 5px;
  z-index: 0; /* Nằm dưới grid content */

  /* Bóng đổ bên trong khung giả */
  box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.6);

  /* Ngăn không cho ::before bắt sự kiện chuột */
  pointer-events: none;
}


/* --- Ô TRỐNG (DROPZONE) --- */
.puzzle-dropzone {
  background-color: rgba(255, 255, 255, 0.6);
  border: 1px dashed rgba(170, 170, 170, 0.7);
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.3s ease-in-out, border-color 0.3s ease-in-out;
  position: relative;
  z-index: 0;
}

.puzzle-dropzone.drag-over {
  background-color: rgba(127, 143, 244, 0.3);
  border-style: solid;
}
.pieces-container.side-container {
  position: relative;
  width: 150px;
  height: calc(var(--grid-size) + 2px); /* Cao bằng lưới + border */
  /* ---- Giữ yêu cầu nền trong suốt ---- */
  background-color: transparent;
  border: none;
  /* ----------------------------------- */
  border-radius: 5px; /* Giữ hoặc bỏ tùy ý */
  padding: 10px;
  box-sizing: border-box;
  overflow-y: auto;
  overflow-x: hidden;
}

/* --- MẢNH GHÉP --- */
.puzzle-piece {
  width: var(--piece-size);
  height: var(--piece-size);
  background-image: var(--bg-image);
  background-size: var(--grid-size) var(--grid-size);
  border: 1px solid rgba(0, 0, 0, 0.3);
  cursor: grab;
  transition: transform 0.2s ease, box-shadow 0.2s ease, opacity 0.2s ease, border-color 0.3s ease-in-out;
  user-select: none;
  /* XÓA position: absolute; mặc định */
  /* position và z-index sẽ được đặt bởi JS ban đầu */
}

.puzzle-piece.dragging {
    cursor: grabbing;
    opacity: 0.7;
    transform: scale(1.1); /* Cho phép xoay khi kéo nếu có */
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    z-index: 1000 !important;
}

/* Mảnh đã đặt */
.puzzle-piece.placed {
    position: static !important;
    transform: none !important;
    cursor: default;
    opacity: 1;
    box-shadow: none;
    z-index: 1;
}

.puzzle-grid.puzzle-completed .puzzle-piece.placed {
  border-color: transparent;
}

.puzzle-grid.puzzle-completed .puzzle-dropzone {
    border: 0px dashed #aaa;
    background-color: transparent;
    border-color: transparent;
    pointer-events: none; /* Ngăn tương tác */
}

/* --- RESPONSIVE --- */
@media (max-width: 768px) { /* Hoặc 800px nếu bạn muốn áp dụng sớm hơn */

  /* -- Thay đổi kích thước lưới linh hoạt -- */
  :root { /* Đặt trong :root bên trong media query hoặc trực tiếp cho #puzzle-grid */
      /* Lưới chiếm 90% chiều rộng màn hình, nhưng không lớn hơn 400px */
      --grid-width: 90vw;
      /* Chiều cao tự tính lại dựa trên grid-width mới */
      /* --grid-height: calc(var(--grid-width) / var(--n-cols) * var(--n-rows)); */
      /* --piece-size: calc(var(--grid-width) / var(--n-cols)); */
      /* Lưu ý: JS cũng cần biết về sự thay đổi này nếu nó set style inline */
  }

  #puzzle-grid {
      /* Áp dụng kích thước mới (quan trọng nếu bạn đặt biến trong :root) */
      width: var(--grid-width);
      height: var(--grid-height); /* Chiều cao sẽ tự tính theo biến CSS */
      max-width: 400px; /* Giới hạn kích thước tối đa của lưới */
      margin-left: auto; /* Căn giữa nếu width < 100% */
      margin-right: auto;
      order: 0; /* Lưới ở trên */
      margin-bottom: 15px; /* Khoảng cách với vùng mảnh bên dưới */
  }
  /* ------------------------------------------ */

  .game-area {
    flex-direction: column;
    align-items: center; /* Căn giữa các thành phần con (lưới, vùng mảnh) */
    max-width: 100%; /* Chiếm toàn bộ chiều rộng container */
    gap: 15px; /* Giảm khoảng cách dọc */
    padding: 0 5px; /* Thêm chút padding ngang nếu cần */
    box-sizing: border-box;
  }

  /* -- Chỉ hiển thị MỘT vùng chứa mảnh -- */
  #pieces-container-right {
      display: none; /* Ẩn vùng bên phải */
  }

  #pieces-container-left.pieces-container.side-container {
      /* Đổi tên class hoặc chỉ cần target ID nếu đã bỏ side-container */
      order: 1; /* Đặt dưới lưới */
      width: 100%; /* Chiếm gần hết chiều rộng */
      max-width: calc(var(--grid-width) + 30px); /* Rộng bằng lưới + viền nếu muốn */
      /* Chiều cao linh hoạt hơn */
      min-height: 100px; /* Chiều cao tối thiểu */
      max-height: 25vh; /* Chiều cao tối đa là 25% chiều cao màn hình */
      height: auto; /* Bỏ chiều cao cố định */

      /* Giữ lại các style flexbox để xếp mảnh */
      display: flex;
      flex-wrap: wrap;
      justify-content: center; /* Căn giữa các mảnh */
      align-content: flex-start; /* Các hàng mảnh bắt đầu từ trên */
      gap: 5px; /* Khoảng cách giữa các mảnh */
      overflow-y: auto; /* Vẫn cho phép cuộn nếu quá nhiều mảnh */
      padding: 10px;
      /* Có thể thêm border nhẹ để dễ nhìn */
      /* border: 1px solid #ddd; */
      background-color: rgba(255, 255, 255, 0.3); /* Nền mờ nhẹ */
      border-radius: 5px;
  }
  /* --------------------------------------- */

   /* Đảm bảo các mảnh trong container mobile không bị position absolute */
   #pieces-container-left .puzzle-piece {
        position: static !important;
        transform: none !important;
        margin: 0; /* Reset margin */
        flex-shrink: 0;
        /* Có thể giảm kích thước mảnh một chút trên mobile nếu cần, nhưng sẽ phức tạp */
        /* width: calc(var(--piece-size) * 0.9); */
        /* height: calc(var(--piece-size) * 0.9); */
   }
}

/* Có thể thêm breakpoint nhỏ hơn nếu cần tinh chỉnh thêm */
@media (max-width: 480px) {
    :root {
        /* Có thể giảm max-width của lưới hơn nữa */
        /* --grid-width: 90vw; */
        /* max-width: 340px; */ /* Ghi đè max-width cho màn hình rất nhỏ */
    }
     #puzzle-grid {
         max-width: 320px; /* Ví dụ: giảm max-width */
     }

    #pieces-container-left.pieces-container.side-container {
        max-height: 20vh; /* Giảm chiều cao tối đa vùng mảnh */
        min-height: 80px;
    }
}